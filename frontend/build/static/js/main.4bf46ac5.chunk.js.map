{"version":3,"sources":["a.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","TitlebarGridList","socket","classes","useState","selected","setSelected","tileData","setTileData","name","setName","complete","setComplete","on","data","style","textAlign","title","className","GridList","cellHeight","map","tile","GridListTile","key","url","onClick","quantity","alert","src","alt","GridListTileBar","subtitle","TextField","value","onChange","e","target","Button","emit","App","state","host","window","location","hostname","socketIOClient","this","setState","Component","ReactDOM","render","document","getElementById"],"mappings":"0TAOMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,QAAS,OACTC,SAAU,OACVC,eAAgB,eAChBC,SAAU,SACVC,gBAAiBN,EAAMO,QAAQC,WAAWC,OAE9CC,SAAU,CACNC,MAAO,IACPC,OAAQ,KAEZC,KAAM,CACFC,MAAO,iCAKA,SAASC,EAAT,GAAqC,IAAVC,EAAS,EAATA,OAChCC,EAAUnB,IAD+B,EAGfoB,mBAAS,MAHM,mBAGxCC,EAHwC,KAG9BC,EAH8B,OAIfF,mBAAS,IAJM,mBAIxCG,EAJwC,KAI9BC,EAJ8B,OAKvBJ,qBALuB,mBAKxCK,EALwC,KAKlCC,EALkC,OAMfN,oBAAS,GANM,mBAMxCO,EANwC,KAM9BC,EAN8B,KAoB/C,OAZAV,EAAOW,GAAG,kBAAkB,SAACC,GACzBN,EAAYM,MAGhBZ,EAAOW,GAAG,aAAa,SAACC,GACpBF,EAAYE,MAQZ,oCACMH,EA4BE,yBAAKI,MAAO,CAACC,UAAW,WACpB,mCAASP,GACT,0FACA,4CAAkBJ,EAASY,MAA3B,mBACA,0CA/BJ,6BACI,yBAAKC,UAAWf,EAAQhB,MACpB,kBAACgC,EAAA,EAAD,CAAUC,WAAY,IAAKF,UAAWf,EAAQP,UACzCW,EAASc,KAAI,SAAAC,GAAI,OACd,kBAACC,EAAA,EAAD,CAAcC,IAAKF,EAAKG,IAAKC,QAAS,WAClCJ,EAAKK,SAAWrB,EAAYgB,GAAQM,MAAM,+BAAD,OAAgCN,EAAKL,MAArC,kBAEzC,yBAAKY,IAAKP,EAAKG,IAAKK,IAAKR,EAAKL,QAC9B,kBAACc,EAAA,EAAD,CACId,MAAOK,EAAKL,MACZe,SAAU,4CAAkBV,EAAKK,kBAMrD,6BAAK,6BAhBT,oDAiBqD,kBAACM,EAAA,EAAD,CAAWC,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAO1B,EAAQ0B,EAAEC,OAAOH,UAC9F,6BAAK,6BAAK,6BACT7B,GAAYI,GACT,kBAAC6B,EAAA,EAAD,CAAQvB,MAAO,CAACvB,gBAAiB,SACzBkC,QA7B5B,WACIxB,EAAOqC,KAAK,kBAAmBlC,EAAUI,KA2BzB,aAC6CJ,EAASY,MADtD,wB,ICvCTuB,E,YAxBX,aAAe,IAAD,8BACV,+CACKC,MAAQ,CACTvC,OAAQ,MAHF,E,iFAQV,IAAMwC,EAAoC,cAA7BC,OAAOC,SAASC,SAA2B,wBAA0BF,OAAOC,SAASC,SAC5F3C,EAAS4C,IAAeJ,GAC9BK,KAAKC,SAAS,CAAC9C,a,+BAGT,IACCA,EAAU6C,KAAKN,MAAfvC,OAEP,OACI,yBAAKa,MAAO,CAACC,UAAW,WAClBd,GAAW,kBAAC,EAAD,CAAGA,OAAQA,S,GAnBtB+C,aCAlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.4bf46ac5.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport {Button, TextField} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: 500,\n        height: 600,\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\n\nexport default function TitlebarGridList({socket}) {\n    const classes = useStyles();\n\n    const [selected, setSelected] = useState(null);\n    const [tileData, setTileData] = useState([]);\n    const [name, setName] = useState();\n    const [complete, setComplete] = useState(false);\n\n    socket.on('updatedOptions', (data) => {\n        setTileData(data)\n    });\n\n    socket.on('completed', (data) => {\n        setComplete(data);\n    });\n\n    function optionSelection() {\n        socket.emit('optionSelection', selected, name)\n    }\n\n    return (\n        <>\n            {!complete ? (\n                <div>\n                    <div className={classes.root}>\n                        <GridList cellHeight={180} className={classes.gridList}>\n                            {tileData.map(tile => (\n                                <GridListTile key={tile.url} onClick={() => {\n                                    tile.quantity ? setSelected(tile) : alert(`unfortunately there are no '${tile.title}' remaining`)\n                                }}>\n                                    <img src={tile.url} alt={tile.title}/>\n                                    <GridListTileBar\n                                        title={tile.title}\n                                        subtitle={<span>Remaining: {tile.quantity}</span>}\n                                    />\n                                </GridListTile>\n                            ))}\n                        </GridList>\n                    </div>\n                    <br/><br/>\n                    Name (please full name so I don't get mixed up): <TextField value={name}\n                                                                                onChange={(e) => setName(e.target.value)}/>\n                    <br/><br/><br/>\n                    {selected && name && (\n                        <Button style={{backgroundColor: \"green\"}}\n                                onClick={optionSelection}>selected: {selected.title} (click\n                            to submit)</Button>\n                    )}\n                </div>\n            ) : (\n                <div style={{textAlign: 'center'}}>\n                    <h1>Hey {name}</h1>\n                    <h1>Hopefully this has found you and your family safe and well</h1>\n                    <h1>I have put 1 {selected.title} aside for you.</h1>\n                    <h1>Stay safe</h1>\n                </div>\n            )}\n        </>\n    );\n}\n","import React, {Component} from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport A  from \"./a\";\nimport './index.css'\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            socket: null,\n        };\n    }\n\n    componentDidMount() {\n        const host = window.location.hostname === 'localhost' ? \"http://127.0.0.1:8080\" : window.location.hostname;\n        const socket = socketIOClient(host);\n        this.setState({socket});\n    }\n\n    render() {\n        const {socket} = this.state;\n\n        return (\n            <div style={{textAlign: \"center\"}}>\n                { socket && (<A socket={socket} />) }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}